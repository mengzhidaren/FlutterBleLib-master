// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bledata.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BleDataBleDeviceMessage;
@class BleDataCharacteristicMessage;
@class BleDataServiceMessage;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum BleDataLogLevelMessage

typedef GPB_ENUM(BleDataLogLevelMessage) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BleDataLogLevelMessage_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  BleDataLogLevelMessage_Verbose = 0,
  BleDataLogLevelMessage_Debug = 1,
  BleDataLogLevelMessage_Info = 2,
  BleDataLogLevelMessage_Warning = 3,
  BleDataLogLevelMessage_Error = 4,
  BleDataLogLevelMessage_None = 5,
};

GPBEnumDescriptor *BleDataLogLevelMessage_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BleDataLogLevelMessage_IsValidValue(int32_t value);

#pragma mark - Enum BleDataBluetoothStateMessage

typedef GPB_ENUM(BleDataBluetoothStateMessage) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BleDataBluetoothStateMessage_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  BleDataBluetoothStateMessage_Unknown = 0,
  BleDataBluetoothStateMessage_Resetting = 1,
  BleDataBluetoothStateMessage_Unsupported = 2,
  BleDataBluetoothStateMessage_Unauthorized = 3,
  BleDataBluetoothStateMessage_PoweredOff = 4,
  BleDataBluetoothStateMessage_PoweredOn = 5,
};

GPBEnumDescriptor *BleDataBluetoothStateMessage_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BleDataBluetoothStateMessage_IsValidValue(int32_t value);

#pragma mark - BleDataBledataRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface BleDataBledataRoot : GPBRootObject
@end

#pragma mark - BleDataScanDataMessage

typedef GPB_ENUM(BleDataScanDataMessage_FieldNumber) {
  BleDataScanDataMessage_FieldNumber_ScanMode = 1,
  BleDataScanDataMessage_FieldNumber_CallbackType = 2,
  BleDataScanDataMessage_FieldNumber_UuidsArray = 3,
};

@interface BleDataScanDataMessage : GPBMessage

@property(nonatomic, readwrite) int32_t scanMode;

@property(nonatomic, readwrite) int32_t callbackType;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *uuidsArray;
/** The number of items in @c uuidsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger uuidsArray_Count;

@end

#pragma mark - BleDataBleDeviceMessage

typedef GPB_ENUM(BleDataBleDeviceMessage_FieldNumber) {
  BleDataBleDeviceMessage_FieldNumber_Id_p = 1,
  BleDataBleDeviceMessage_FieldNumber_Name = 2,
  BleDataBleDeviceMessage_FieldNumber_Rssi = 3,
  BleDataBleDeviceMessage_FieldNumber_Mtu = 4,
  BleDataBleDeviceMessage_FieldNumber_IsConnected = 5,
};

@interface BleDataBleDeviceMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) int32_t rssi;

@property(nonatomic, readwrite) int32_t mtu;

@property(nonatomic, readwrite) BOOL isConnected;

@end

#pragma mark - BleDataScanResultMessage

typedef GPB_ENUM(BleDataScanResultMessage_FieldNumber) {
  BleDataScanResultMessage_FieldNumber_BleDeviceMessage = 1,
  BleDataScanResultMessage_FieldNumber_Rssi = 2,
  BleDataScanResultMessage_FieldNumber_TimestampNanos = 3,
  BleDataScanResultMessage_FieldNumber_ScanCallbackTypeMessage = 4,
};

@interface BleDataScanResultMessage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BleDataBleDeviceMessage *bleDeviceMessage;
/** Test to see if @c bleDeviceMessage has been set. */
@property(nonatomic, readwrite) BOOL hasBleDeviceMessage;

@property(nonatomic, readwrite) int32_t rssi;

@property(nonatomic, readwrite) uint64_t timestampNanos;

@property(nonatomic, readwrite) int32_t scanCallbackTypeMessage;

@end

#pragma mark - BleDataConnectToDeviceDataMessage

typedef GPB_ENUM(BleDataConnectToDeviceDataMessage_FieldNumber) {
  BleDataConnectToDeviceDataMessage_FieldNumber_MacAddress = 1,
  BleDataConnectToDeviceDataMessage_FieldNumber_IsAutoConnect = 2,
  BleDataConnectToDeviceDataMessage_FieldNumber_RequestMtu = 3,
};

@interface BleDataConnectToDeviceDataMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *macAddress;

@property(nonatomic, readwrite) BOOL isAutoConnect;

@property(nonatomic, readwrite) int32_t requestMtu;

@end

#pragma mark - BleDataServiceMessages

typedef GPB_ENUM(BleDataServiceMessages_FieldNumber) {
  BleDataServiceMessages_FieldNumber_ServiceMessagesArray = 1,
};

@interface BleDataServiceMessages : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BleDataServiceMessage*> *serviceMessagesArray;
/** The number of items in @c serviceMessagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger serviceMessagesArray_Count;

@end

#pragma mark - BleDataServiceMessage

typedef GPB_ENUM(BleDataServiceMessage_FieldNumber) {
  BleDataServiceMessage_FieldNumber_Id_p = 1,
  BleDataServiceMessage_FieldNumber_Uuid = 2,
  BleDataServiceMessage_FieldNumber_Device = 3,
  BleDataServiceMessage_FieldNumber_IsPrimary = 4,
};

@interface BleDataServiceMessage : GPBMessage

@property(nonatomic, readwrite) double id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;

@property(nonatomic, readwrite, strong, null_resettable) BleDataBleDeviceMessage *device;
/** Test to see if @c device has been set. */
@property(nonatomic, readwrite) BOOL hasDevice;

@property(nonatomic, readwrite) BOOL isPrimary;

@end

#pragma mark - BleDataCharacteristicMessages

typedef GPB_ENUM(BleDataCharacteristicMessages_FieldNumber) {
  BleDataCharacteristicMessages_FieldNumber_CharacteristicMessageArray = 1,
};

@interface BleDataCharacteristicMessages : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BleDataCharacteristicMessage*> *characteristicMessageArray;
/** The number of items in @c characteristicMessageArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger characteristicMessageArray_Count;

@end

#pragma mark - BleDataCharacteristicMessage

typedef GPB_ENUM(BleDataCharacteristicMessage_FieldNumber) {
  BleDataCharacteristicMessage_FieldNumber_Id_p = 1,
  BleDataCharacteristicMessage_FieldNumber_Uuid = 2,
  BleDataCharacteristicMessage_FieldNumber_ServiceId = 3,
  BleDataCharacteristicMessage_FieldNumber_ServiceUuid = 4,
  BleDataCharacteristicMessage_FieldNumber_DeviceId = 5,
  BleDataCharacteristicMessage_FieldNumber_IsReadable = 6,
  BleDataCharacteristicMessage_FieldNumber_IsWritableWithResponse = 7,
  BleDataCharacteristicMessage_FieldNumber_IsWritableWithoutResponse = 8,
  BleDataCharacteristicMessage_FieldNumber_IsNotificable = 9,
  BleDataCharacteristicMessage_FieldNumber_IsIndicatable = 10,
  BleDataCharacteristicMessage_FieldNumber_IsNotifing = 11,
  BleDataCharacteristicMessage_FieldNumber_Value = 12,
};

@interface BleDataCharacteristicMessage : GPBMessage

@property(nonatomic, readwrite) double id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;

@property(nonatomic, readwrite) int32_t serviceId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *serviceUuid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@property(nonatomic, readwrite) BOOL isReadable;

@property(nonatomic, readwrite) BOOL isWritableWithResponse;

@property(nonatomic, readwrite) BOOL isWritableWithoutResponse;

@property(nonatomic, readwrite) BOOL isNotificable;

@property(nonatomic, readwrite) BOOL isIndicatable;

@property(nonatomic, readwrite) BOOL isNotifing;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

#pragma mark - BleDataMonitorCharacteristicMessage

typedef GPB_ENUM(BleDataMonitorCharacteristicMessage_FieldNumber) {
  BleDataMonitorCharacteristicMessage_FieldNumber_TransactionId = 1,
  BleDataMonitorCharacteristicMessage_FieldNumber_CharacteristicMessage = 2,
};

@interface BleDataMonitorCharacteristicMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *transactionId;

@property(nonatomic, readwrite, strong, null_resettable) BleDataCharacteristicMessage *characteristicMessage;
/** Test to see if @c characteristicMessage has been set. */
@property(nonatomic, readwrite) BOOL hasCharacteristicMessage;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
