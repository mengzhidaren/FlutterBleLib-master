// Copyright 2017, Paul DeMarco.
// All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

syntax = "proto3";

option java_package = "com.polidea.flutterblelib";
option java_outer_classname = "BleData";
option objc_class_prefix = "BleData";

message ScanDataMessage {
    int32 scanMode = 1;
    int32 callbackType = 2;
    repeated string uuids = 3;
}

message BleDeviceMessage {
    string id = 1;
    string name = 2;
    int32 rssi = 3;
    int32 mtu = 4;
    bool isConnected = 5;
}

message ScanResultMessage {
    BleDeviceMessage bleDeviceMessage = 1;
    int32 rssi = 2;
    uint64 timestampNanos = 3;
    int32 scanCallbackTypeMessage = 4;
    repeated bytes scanRecord=5;
}


message ConnectToDeviceDataMessage {
    string macAddress = 1;
    bool isAutoConnect = 2;
    int32 requestMtu = 3;
}

message ServiceMessages {
    repeated ServiceMessage serviceMessages = 1;
}

message ServiceMessage {
    double id = 1;
    string uuid = 2;
    BleDeviceMessage device = 3;
    bool isPrimary = 4;
}

message CharacteristicMessages {
    repeated CharacteristicMessage characteristicMessage = 1;
}

message CharacteristicMessage {
    double id = 1;
    string uuid = 2;
    int32 serviceId = 3;
    string serviceUuid = 4;
    string deviceId = 5;
    bool isReadable = 6;
    bool isWritableWithResponse = 7;
    bool isWritableWithoutResponse = 8;
    bool isNotificable = 9;
    bool isIndicatable = 10;
    bool isNotifing =11;
    string value = 12;
}

message MonitorCharacteristicMessage {
    string transactionId = 1;
    CharacteristicMessage characteristicMessage = 2;
}

enum LogLevelMessage {
    VERBOSE = 0;
    DEBUG = 1;
    INFO = 2;
    WARNING = 3;
    ERROR = 4;
    NONE = 5;
}

enum BluetoothStateMessage {
    UNKNOWN = 0;
    RESETTING = 1;
    UNSUPPORTED = 2;
    UNAUTHORIZED = 3;
    POWERED_OFF = 4;
    POWERED_ON = 5;
}